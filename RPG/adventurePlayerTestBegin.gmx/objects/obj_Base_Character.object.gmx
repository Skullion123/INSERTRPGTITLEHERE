<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Kirito_DS</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Variables


var up;
var left;
var right;
var down;
var upstill;
var leftstill;
var rightstill;
var downstill;

var L = 0;
var R = 0;
var U = 0;
var D = 0;

phy_fixed_rotation=true;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation Speed Timer

image_speed = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth Correction

depth = phy_position_y * -1 + 35

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Input Logic

if(keyboard_check(vk_left)) {
    sprite_index = left;
    phy_position_x -=2;
    L = 1
}

else {
    L = 0;
}

if(keyboard_check(vk_right)) {
    sprite_index = right;
    phy_position_x +=2;
    R = 1;
}

else {
    R = 0;
}

if(keyboard_check(vk_up)) {
    sprite_index = up;
    phy_position_y -=2;
    U = 1;
}

else {
    U = 0;
}

if(keyboard_check(vk_down)) {
    sprite_index = down;
    phy_position_y +=2;
    D = 1;
}
else {
    D = 0;
}

if (U == 1) {
    if (R == 1) {
        if (D == 1) {
            if (L == 1) {
                sprite_index = downstill;
            }
            else {
                sprite_index = right;
            }
        }
        if (D == 0) {
            if (L == 1) {
                sprite_index = up;
            }
            else {
                sprite_index = right;
            }
        }
    }
    if (R == 0) {
        if (D == 1) {
            if (L == 1) {
                sprite_index = left;
            }
            else {
                sprite_index = downstill;
            }
        }
        if (D == 0) {
            if (L == 1) {
                sprite_index = left;
            }
            else {
                sprite_index = up;
            }
        }
    }
}
if (U == 0) {
    if (R == 1) {
        if (D == 1) {
            if (L == 1) {
                sprite_index = down;
            }
            else {
                sprite_index = right;
            }
        }
        if (D == 0) {
            if (L == 1) {
                sprite_index = downstill;
            }
            else {
                sprite_index = right;
            }
        }
    }
    if (R == 0) {
        if (D == 1) {
            if (L == 1) {
                sprite_index = left;
            }
            else {
                sprite_index = down;
            }
        }
        if (D == 0) {
            if (L == 1) {
                sprite_index = left;
            }
            else {
                sprite_index = downstill;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Input

if (keyboard_check(vk_left))
    L = 1;
else if (keyboard_check_released(vk_left)) {
    L = 0;
}

if (keyboard_check(vk_up))
    U = 1;
else if (keyboard_check_released(vk_up)) {
    U = 0;
}
    
if (keyboard_check(vk_down))
    D = 1;
else if (keyboard_check_released(vk_down)) {
    D = 0;
}
    
if (keyboard_check(vk_right))
    R = 1;
else if (keyboard_check_released(vk_right)) {
    R = 0;
}
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Block">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Rotation to 0
image_angle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>9001</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>11,32</point>
    <point>4,22</point>
    <point>6,19</point>
    <point>8,18</point>
    <point>25,18</point>
    <point>27,19</point>
    <point>29,22</point>
    <point>21,32</point>
  </PhysicsShapePoints>
</object>
